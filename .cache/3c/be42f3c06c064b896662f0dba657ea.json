{"id":"../node_modules/li/lib/index.js","dependencies":[{"name":"/Users/bryanmonypenny/UNI/DIG31/gp-now/gp-now-frontend/package.json","includedInParent":true,"mtime":1619496085269},{"name":"/Users/bryanmonypenny/UNI/DIG31/gp-now/gp-now-frontend/node_modules/li/package.json","includedInParent":true,"mtime":1619496071746}],"generated":{"js":"var define;\n(function (name, definition, context) {\n\n  //try CommonJS, then AMD (require.js), then use global.\n\n  if (typeof module != 'undefined' && module.exports) module.exports = definition();\n  else if (typeof context['define'] == 'function' && context['define']['amd']) define(definition);\n  else context[name] = definition();\n\n})('li', function () {\n  // compile regular expressions ahead of time for efficiency\n  var relsRegExp = /^;\\s*([^\"=]+)=(?:\"([^\"]+)\"|([^\";,]+)(?:[;,]|$))/;\n  var sourceRegExp = /^<([^>]*)>/;\n  var delimiterRegExp = /^\\s*,\\s*/;\n\n  return {\n    parse: function (linksHeader, options) {\n      var match;\n      var source;\n      var rels;\n      var extended = options && options.extended || false;\n      var links = [];\n\n      while (linksHeader) {\n        linksHeader = linksHeader.trim();\n\n        // Parse `<link>`\n        source = sourceRegExp.exec(linksHeader);\n        if (!source) break;\n\n        var current = {\n          link: source[1]\n        };\n\n        // Move cursor\n        linksHeader = linksHeader.slice(source[0].length);\n\n        // Parse `; attr=relation` and `; attr=\"relation\"`\n\n        var nextDelimiter = linksHeader.match(delimiterRegExp);\n        while(linksHeader && (!nextDelimiter || nextDelimiter.index > 0)) {\n          match = relsRegExp.exec(linksHeader);\n          if (!match) break;\n\n          // Move cursor\n          linksHeader = linksHeader.slice(match[0].length);\n          nextDelimiter = linksHeader.match(delimiterRegExp);\n\n\n          if (match[1] === 'rel' || match[1] === 'rev') {\n            // Add either quoted rel or unquoted rel\n            rels = (match[2] || match[3]).split(/\\s+/);\n            current[match[1]] = rels;\n          } else {\n            current[match[1]] = match[2] || match[3];\n          }\n        }\n\n        links.push(current);\n        // Move cursor\n        linksHeader = linksHeader.replace(delimiterRegExp, '');\n      }\n\n      if (!extended) {\n        return links.reduce(function(result, currentLink) {\n          if (currentLink.rel) {\n            currentLink.rel.forEach(function(rel) {\n              result[rel] = currentLink.link;\n            });\n          }\n          return result;\n        }, {});\n      }\n\n      return links;\n    },\n    stringify: function (params) {\n      var grouped = Object.keys(params).reduce(function(grouped, key) {\n        grouped[params[key]] = grouped[params[key]] || [];\n        grouped[params[key]].push(key);\n        return grouped;\n      }, {});\n\n      var entries = Object.keys(grouped).reduce(function(result, link) {\n        return result.concat('<' + link + '>; rel=\"' + grouped[link].join(' ') + '\"');\n      }, []);\n\n      return entries.join(', ');\n    }\n  };\n\n}, this);\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/li/lib/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/li/lib/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}}],"sources":{"../node_modules/li/lib/index.js":"(function (name, definition, context) {\n\n  //try CommonJS, then AMD (require.js), then use global.\n\n  if (typeof module != 'undefined' && module.exports) module.exports = definition();\n  else if (typeof context['define'] == 'function' && context['define']['amd']) define(definition);\n  else context[name] = definition();\n\n})('li', function () {\n  // compile regular expressions ahead of time for efficiency\n  var relsRegExp = /^;\\s*([^\"=]+)=(?:\"([^\"]+)\"|([^\";,]+)(?:[;,]|$))/;\n  var sourceRegExp = /^<([^>]*)>/;\n  var delimiterRegExp = /^\\s*,\\s*/;\n\n  return {\n    parse: function (linksHeader, options) {\n      var match;\n      var source;\n      var rels;\n      var extended = options && options.extended || false;\n      var links = [];\n\n      while (linksHeader) {\n        linksHeader = linksHeader.trim();\n\n        // Parse `<link>`\n        source = sourceRegExp.exec(linksHeader);\n        if (!source) break;\n\n        var current = {\n          link: source[1]\n        };\n\n        // Move cursor\n        linksHeader = linksHeader.slice(source[0].length);\n\n        // Parse `; attr=relation` and `; attr=\"relation\"`\n\n        var nextDelimiter = linksHeader.match(delimiterRegExp);\n        while(linksHeader && (!nextDelimiter || nextDelimiter.index > 0)) {\n          match = relsRegExp.exec(linksHeader);\n          if (!match) break;\n\n          // Move cursor\n          linksHeader = linksHeader.slice(match[0].length);\n          nextDelimiter = linksHeader.match(delimiterRegExp);\n\n\n          if (match[1] === 'rel' || match[1] === 'rev') {\n            // Add either quoted rel or unquoted rel\n            rels = (match[2] || match[3]).split(/\\s+/);\n            current[match[1]] = rels;\n          } else {\n            current[match[1]] = match[2] || match[3];\n          }\n        }\n\n        links.push(current);\n        // Move cursor\n        linksHeader = linksHeader.replace(delimiterRegExp, '');\n      }\n\n      if (!extended) {\n        return links.reduce(function(result, currentLink) {\n          if (currentLink.rel) {\n            currentLink.rel.forEach(function(rel) {\n              result[rel] = currentLink.link;\n            });\n          }\n          return result;\n        }, {});\n      }\n\n      return links;\n    },\n    stringify: function (params) {\n      var grouped = Object.keys(params).reduce(function(grouped, key) {\n        grouped[params[key]] = grouped[params[key]] || [];\n        grouped[params[key]].push(key);\n        return grouped;\n      }, {});\n\n      var entries = Object.keys(grouped).reduce(function(result, link) {\n        return result.concat('<' + link + '>; rel=\"' + grouped[link].join(' ') + '\"');\n      }, []);\n\n      return entries.join(', ');\n    }\n  };\n\n}, this);\n"},"lineCount":93}},"error":null,"hash":"a82c8b781a8b29a66e56d2bded29cedf","cacheData":{"env":{}}}